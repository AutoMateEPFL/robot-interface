version: 2.1

executors:
  docker-executor:
    docker:
      - image: docker:20.10.7-git
        environment:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
    resource_class: medium

jobs:
  test: 
    docker:
      - image: cimg/python:3.11

    steps:
      - checkout
      - run: 
          name: Install Poetry
          command: |
            curl -sSL https://install.python-poetry.org | python -
      - run:
          name: Configure Poetry
          command: |
            poetry config virtualenvs.create false
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pyproject.toml" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            poetry install -vvv
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v1-dependencies-{{ checksum "pyproject.toml" }}
      - run:
          name: Download Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Prepare Code Climate Test Reporter
          command: |
            ./cc-test-reporter before-build
      - run:
          name: run tests
          command: |
            poetry run coverage run -m pytest
            poetry run coverage xml 
      - run:
          command: |
            ./cc-test-reporter after-build --exit-code $?

  build-and-push-docker:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install Docker Buildx
          command: |
            BUILDX_VERSION="v0.5.1"
            wget https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.linux-amd64
            chmod a+x buildx-${BUILDX_VERSION}.linux-amd64
            mkdir -p ~/.docker/cli-plugins
            mv buildx-${BUILDX_VERSION}.linux-amd64 ~/.docker/cli-plugins/docker-buildx
      - run:
          name: Build and Push Docker image
          command: |
            apk add --no-cache git
            echo "$GHCR_TOKEN" | docker login ghcr.io -u aladin6060 --password-stdin
            docker buildx create --use
            docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/automateepfl/robot-interface:latest . --push

workflows:
  sample:
    jobs:
      - test
      - build-and-push-docker:
          requires:
            - test