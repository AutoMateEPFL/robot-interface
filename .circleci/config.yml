# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test: 
    environment:
      - CC_TEST_REPORTER_ID: 72cb890ab9ae45a3a81884aac7a994d302b53a602960d4666c7d9d1766dd35ce

    docker:
      - image: cimg/python:3.11


    steps:
      - checkout
      - run: 
          name: Install Poetry
          command: |
            curl -sSL https://install.python-poetry.org | python -
      - run:
          name: Configure Poetry
          command: |
            poetry config virtualenvs.create false
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pyproject.toml" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            poetry install -vvv
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v1-dependencies-{{ checksum "pyproject.toml" }}
          
      - run:
          name: Download Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Prepare Code Climate Test Reporter
          command: |
            ./cc-test-reporter before-build
      # Your test or build steps goes here
      - run:
          name: run tests
          command: |
                  poetry run coverage run -m pytest
                  poetry run coverage html --omit=env/*,tests/*
                  poetry run coverage xml --omit=env/*,tests/*
      - run:
          command: |
            ./cc-test-reporter after-build --exit-code $?
# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
