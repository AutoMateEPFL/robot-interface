version: 2.1

orbs:
  docker: circleci/docker@1.5.0

executors:
  docker-executor:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true

jobs:
  test: 
    docker:
      - image: cimg/python:3.11

    steps:
      - checkout
      - run: 
          name: Install Poetry
          command: |
            curl -sSL https://install.python-poetry.org | python -
      - run:
          name: Configure Poetry
          command: |
            poetry config virtualenvs.create false
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pyproject.toml" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            poetry install -vvv
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v1-dependencies-{{ checksum "pyproject.toml" }}
      - run:
          name: Download Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Prepare Code Climate Test Reporter
          command: |
            ./cc-test-reporter before-build
      - run:
          name: run tests
          command: |
            poetry run coverage run -m pytest
            poetry run coverage xml 
      - run:
          command: |
            ./cc-test-reporter after-build --exit-code $?

  build-and-push-docker:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup QEMU
          command: docker run --privileged --rm tonistiigi/binfmt --install all
      - run:
          name: Setup Docker Buildx
          command: |
            version="$(wget -qO- https://github.com/docker/buildx/releases/latest | grep -Po 'v\d+\.\d+\.\d+' | head -n 1)"
            mkdir -p ~/.docker/cli-plugins/
            wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/$version/buildx-$version.linux-amd64
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx create --use
      - run:
          name: Build and Push Docker image
          command: |
            echo "$GHCR_TOKEN" | docker login ghcr.io -u aladin6060 --password-stdin
            docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/automateepfl/robot-interface:latest . --push

workflows:
  sample:
    jobs:
      - test
      - build-and-push-docker:
          requires:
            - test

